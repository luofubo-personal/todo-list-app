{
  "version": 3,
  "sources": ["src/app/todo-item/todo-item.component.spec.ts"],
  "sourcesContent": ["import { ComponentFixture, TestBed } from '@angular/core/testing';\nimport { TodoItemComponent } from './todo-item.component';\nimport { Todo } from '../todo';\n\ndescribe('TodoItemComponent', () => {\n  let component: TodoItemComponent;\n  let fixture: ComponentFixture<TodoItemComponent>;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      imports: [TodoItemComponent]\n    })\n    .compileComponents();\n    \n    fixture = TestBed.createComponent(TodoItemComponent);\n    component = fixture.componentInstance;\n  });\n\n  it('should create', () => {\n    component.todo = { \n      id: 1, \n      text: 'Test Todo', \n      completed: false, \n      timestamp: new Date() \n    };\n    fixture.detectChanges();\n    expect(component).toBeTruthy();\n  });\n\n  it('should emit toggleTodo event when checkbox is clicked', () => {\n    const todo: Todo = { \n      id: 1, \n      text: 'Test Todo', \n      completed: false, \n      timestamp: new Date() \n    };\n    \n    component.todo = todo;\n    spyOn(component.toggleTodo, 'emit');\n    \n    component.onToggle();\n    \n    expect(component.toggleTodo.emit).toHaveBeenCalledWith(todo);\n  });\n\n  it('should emit deleteTodo event when delete button is clicked', () => {\n    const todo: Todo = { \n      id: 1, \n      text: 'Test Todo', \n      completed: false, \n      timestamp: new Date() \n    };\n    \n    component.todo = todo;\n    spyOn(component.deleteTodo, 'emit');\n    \n    component.onDelete();\n    \n    expect(component.deleteTodo.emit).toHaveBeenCalledWith(todo);\n  });\n\n  describe('Deadline formatting', () => {\n    it('should format today deadline correctly', () => {\n      const today = new Date();\n      today.setHours(14, 30, 0, 0);\n      \n      const result = component.formatDeadline(today);\n      \n      expect(result).toBe('Today at 02:30 PM');\n    });\n\n    it('should format tomorrow deadline correctly', () => {\n      const tomorrow = new Date();\n      tomorrow.setDate(tomorrow.getDate() + 1);\n      tomorrow.setHours(9, 15, 0, 0);\n      \n      const result = component.formatDeadline(tomorrow);\n      \n      expect(result).toBe('Tomorrow at 09:15 AM');\n    });\n\n    it('should format yesterday deadline correctly', () => {\n      const yesterday = new Date();\n      yesterday.setDate(yesterday.getDate() - 1);\n      yesterday.setHours(16, 45, 0, 0);\n      \n      const result = component.formatDeadline(yesterday);\n      \n      expect(result).toBe('Yesterday at 04:45 PM');\n    });\n\n    it('should format this week deadline correctly', () => {\n      const thisWeek = new Date();\n      thisWeek.setDate(thisWeek.getDate() + 3);\n      thisWeek.setHours(11, 0, 0, 0);\n      \n      const result = component.formatDeadline(thisWeek);\n      const expectedDay = thisWeek.toLocaleDateString([], { weekday: 'long' });\n      \n      expect(result).toBe(`${expectedDay} at 11:00 AM`);\n    });\n\n    it('should format distant deadline correctly', () => {\n      const distant = new Date();\n      distant.setDate(distant.getDate() + 10);\n      distant.setHours(13, 20, 0, 0);\n      \n      const result = component.formatDeadline(distant);\n      const expectedDate = distant.toLocaleDateString();\n      \n      expect(result).toBe(`${expectedDate} at 01:20 PM`);\n    });\n  });\n\n  describe('Urgency detection', () => {\n    it('should detect urgent todo (less than 24 hours)', () => {\n      const urgentDeadline = new Date();\n      urgentDeadline.setHours(urgentDeadline.getHours() + 12);\n      \n      component.todo = { \n        id: 1, \n        text: 'Urgent Todo', \n        completed: false, \n        timestamp: new Date(),\n        deadline: urgentDeadline\n      };\n      \n      expect(component.isUrgent()).toBe(true);\n    });\n\n    it('should not detect urgent todo (more than 24 hours)', () => {\n      const futureDeadline = new Date();\n      futureDeadline.setDate(futureDeadline.getDate() + 2);\n      \n      component.todo = { \n        id: 1, \n        text: 'Future Todo', \n        completed: false, \n        timestamp: new Date(),\n        deadline: futureDeadline\n      };\n      \n      expect(component.isUrgent()).toBe(false);\n    });\n\n    it('should not detect urgent for overdue todo', () => {\n      const overdueDeadline = new Date();\n      overdueDeadline.setHours(overdueDeadline.getHours() - 2);\n      \n      component.todo = { \n        id: 1, \n        text: 'Overdue Todo', \n        completed: false, \n        timestamp: new Date(),\n        deadline: overdueDeadline\n      };\n      \n      expect(component.isUrgent()).toBe(false);\n    });\n\n    it('should not detect urgent for completed todo', () => {\n      const urgentDeadline = new Date();\n      urgentDeadline.setHours(urgentDeadline.getHours() + 12);\n      \n      component.todo = { \n        id: 1, \n        text: 'Completed Todo', \n        completed: true, \n        timestamp: new Date(),\n        deadline: urgentDeadline\n      };\n      \n      expect(component.isUrgent()).toBe(false);\n    });\n\n    it('should not detect urgent for todo without deadline', () => {\n      component.todo = { \n        id: 1, \n        text: 'No Deadline Todo', \n        completed: false, \n        timestamp: new Date()\n      };\n      \n      expect(component.isUrgent()).toBe(false);\n    });\n  });\n\n  describe('Template rendering', () => {\n    it('should display todo text', () => {\n      component.todo = { \n        id: 1, \n        text: 'Test Todo Text', \n        completed: false, \n        timestamp: new Date() \n      };\n      \n      fixture.detectChanges();\n      \n      const todoText = fixture.nativeElement.querySelector('.todo-text');\n      expect(todoText.textContent.trim()).toBe('Test Todo Text');\n    });\n\n    it('should show deadline info when deadline exists', () => {\n      const deadline = new Date();\n      deadline.setDate(deadline.getDate() + 1);\n      \n      component.todo = { \n        id: 1, \n        text: 'Todo with deadline', \n        completed: false, \n        timestamp: new Date(),\n        deadline: deadline\n      };\n      \n      fixture.detectChanges();\n      \n      const deadlineInfo = fixture.nativeElement.querySelector('.deadline-info');\n      expect(deadlineInfo).toBeTruthy();\n    });\n\n    it('should not show deadline info when no deadline', () => {\n      component.todo = { \n        id: 1, \n        text: 'Todo without deadline', \n        completed: false, \n        timestamp: new Date()\n      };\n      \n      fixture.detectChanges();\n      \n      const deadlineInfo = fixture.nativeElement.querySelector('.deadline-info');\n      expect(deadlineInfo).toBeFalsy();\n    });\n\n    it('should show countdown when not completed and has time remaining', () => {\n      const deadline = new Date();\n      deadline.setDate(deadline.getDate() + 1);\n      \n      component.todo = { \n        id: 1, \n        text: 'Todo with countdown', \n        completed: false, \n        timestamp: new Date(),\n        deadline: deadline,\n        timeRemaining: '1d 2h'\n      };\n      \n      fixture.detectChanges();\n      \n      const countdown = fixture.nativeElement.querySelector('.countdown');\n      expect(countdown).toBeTruthy();\n      expect(countdown.textContent.trim()).toBe('1d 2h');\n    });\n\n    it('should not show countdown when completed', () => {\n      const deadline = new Date();\n      deadline.setDate(deadline.getDate() + 1);\n      \n      component.todo = { \n        id: 1, \n        text: 'Completed todo', \n        completed: true, \n        timestamp: new Date(),\n        deadline: deadline,\n        timeRemaining: '1d 2h'\n      };\n      \n      fixture.detectChanges();\n      \n      const countdown = fixture.nativeElement.querySelector('.countdown');\n      expect(countdown).toBeFalsy();\n    });\n  });\n});\n"],
  "mappings": "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",
  "names": []
}
